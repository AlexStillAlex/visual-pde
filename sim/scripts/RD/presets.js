// presets.js

export function getPreset(id) {
  let options;
  switch (id) {
    case "KlausmeierModel":
      options = {
        brushAction: "smoothadd",
        brushValue: "5",
        brushRadius: "2",
        clearValueU: "RAND",
        clearValueV: "1",
        diffusionStrUU: "1",
        diffusionStrVV: "1",
        diffusionStrWW: "0",
        dt: 0.001,
        kineticParams:
          "a = 2 in [0.01, 0.01, 10];m = 0.540 in [0.2,0.01,1];V=50;",
        maxColourValue: 16,
        minColourValue: 0.000002911286856033257,
        preset: "KlausmeierModel",
        reactionStrU: "w*n^2-m*n",
        reactionStrV: "a-w-w*n^2+V*w_x",
        reactionStrW: "0",
        speciesNames: "n w",
        whatToDraw: "n",
        whatToPlot: "n",
      };
      break;
    case "BistableAdvection":
      options = {
        brushRadius: "1",
        brushAction: "smoothadd",
        clearValueU: "0",
        diffusionStrUU: "0.02",
        diffusionStrVV: "0",
        diffusionStrWW: "0",
        dt: 0.005,
        kineticParams:
          "a = 0.48  in  [0, 0.01, 1];theta = 1.57 in  [-6.4, 0.01, 6.4];V = 0.5 in  [0, 0.01, 5];",
        numSpecies: 1,
        preset: "BistableAdvection",
        reactionStrU: "u*(u-a)*(1-u)+V*(cos(theta)*u_x + sin(theta)*u_y)",
        reactionStrV: "0",
        reactionStrW: "0",
        spatialStep: 0.3,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;
    case "AdvectionEquation":
      options = {
        boundaryConditionsU: "neumann",
        brushAction: "smoothreplace",
        brushValue: "2",
        brushRadius: "4",
        clearValueU: "0",
        diffusionStrUU: "1",
        diffusionStrVV: "0",
        diffusionStrWW: "0",
        domainScale: 320,
        dt: 0.002,
        kineticParams:
          "Q = 2.0 in  [1, 1, 2];V = 0.140 in  [0, 0.01, 5];theta  =  -3.1500000  in  [-6.4, 0.01, 6.4];",
        numSpecies: 1,
        preset: "AdvectionEquation",
        reactionStrU:
          "V*(H(1.5-Q)*(cos(theta)*u_x + sin(theta)*u_y)-H(Q-1.5)*(-(y-L_y/2)*u_x+(x-L_x/2)*u_y))",
        reactionStrV: "0",
        reactionStrW: "0",
        spatialStep: 1.25,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;
    case "BurgersEquation":
      options = {
        boundaryConditionsU: "neumann",
        brushAction: "smoothreplace",
        brushRadius: "50",
        brushValue: "0.1",
        clearValueU: "0.1*exp(-0.00005*(x-L_x/5)^2)",
        diffusionStrUU: "epsilon",
        diffusionStrVV: "0",
        diffusionStrWW: "0",
        dimension: "1",
        domainScale: 1000,
        dt: 0.04,
        kineticParams: "epsilon=0.05;",
        maxColourValue: 0.1,
        numSpecies: "1",
        numTimestepsPerFrame: 400,
        plotType: "line",
        preset: "BurgersEquation",
        reactionStrU: "- u * u_x",
        reactionStrV: "0",
        reactionStrW: "0",
        spatialStep: 2,
        suppressTryClickingPopup: true,
        timeDisplay: true,
        typeOfBrush: "vline",
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;
    case "swiftHohenbergLocalisedDirectedAdvection":
      options = {
        algebraicV: true,
        autoSetColourRange: true,
        brushRadius: "1",
        clearValueU:
          "H(1.5-P)*((cos(x-L_x/2) - cos((x-L_x/2+sqrt(3)*(y-L_y/2))/2) - cos((x-L_x/2-sqrt(3)*(y-L_y/2))/2)+cos(y-L_y/2) - cos((y-L_y/2+sqrt(3)*(x-L_x/2))/2) - cos((y-L_y/2-sqrt(3)*(x-L_x/2))/2))*exp(-sqrt(0.28)*sqrt((x-L_x/2)^2+(y-L_y/2)^2)/5)) +H(P-1.5)*H(2.5-P)*((cos(x-L_x/2) + cos((x-L_x/2+sqrt(3)*(y-L_y/2))/2) + cos((x-L_x/2-sqrt(3)*(y-L_y/2))/2))*exp(-sqrt(0.28)*sqrt((x-L_x/2)^2+(y-L_y/2)^2)/5))+H(P-2.5)*((cos(x-L_x/2) + cos((x-L_x/2+sqrt(3)*(y-L_y/2))/2) + cos((x-L_x/2-sqrt(3)*(y-L_y/2))/2)+cos(y-L_y/2) + cos((y-L_y/2+sqrt(3)*(x-L_x/2))/2) + cos((y-L_y/2-sqrt(3)*(x-L_x/2))/2))*exp(-sqrt(0.28)*sqrt((x-L_x/2)^2+(y-L_y/2)^2)/5))",
        crossDiffusion: true,
        diffusionStrUU: "0",
        diffusionStrUV: "-D",
        diffusionStrVU: "D",
        diffusionStrVV: "0",
        diffusionStrWW: "0",
        domainScale: 150,
        dt: 0.001,
        kineticParams:
          "r  =  -0.28  in  [-2, 2];a  =  1.6  in  [-2,  2];b  =  -1  in  [-2,  0.1,  2];c  =  -1;D  =  1;P  =  3.0  in  [1,  1,  3];V = 2.000 in  [0, 0.01, 10];theta = -2.00000 in  [-6.4, 0.01, 6.4];",
        maxColourValue: 1.4107916355133057,
        minColourValue: -0.3903360962867737,
        numTimestepsPerFrame: 200,
        preset: "swiftHohenbergLocalisedDirectedAdvection",
        reactionStrU:
          "(r-1)*u-2*v+a*u^2+b*u^3+V*(cos(theta)*u_x + sin(theta)*u_y)",
        reactionStrV: "0",
        reactionStrW: "0",
        suppressTryClickingPopup: true,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;
    case "swiftHohenbergLocalisedRotationalAdvection":
      options = {
        algebraicV: true,
        brushRadius: "1",
        clearValueU:
          "H(1.5-P)*((cos(x-L_x/2) - cos((x-L_x/2+sqrt(3)*(y-L_y/2))/2) - cos((x-L_x/2-sqrt(3)*(y-L_y/2))/2)+cos(y-L_y/2) - cos((y-L_y/2+sqrt(3)*(x-L_x/2))/2) - cos((y-L_y/2-sqrt(3)*(x-L_x/2))/2))*exp(-sqrt(0.28)*sqrt((x-L_x/2)^2+(y-L_y/2)^2)/5)) +H(P-1.5)*H(2.5-P)*((cos(x-L_x/2) + cos((x-L_x/2+sqrt(3)*(y-L_y/2))/2) + cos((x-L_x/2-sqrt(3)*(y-L_y/2))/2))*exp(-sqrt(0.28)*sqrt((x-L_x/2)^2+(y-L_y/2)^2)/5))+H(P-2.5)*((cos(x-L_x/2) + cos((x-L_x/2+sqrt(3)*(y-L_y/2))/2) + cos((x-L_x/2-sqrt(3)*(y-L_y/2))/2)+cos(y-L_y/2) + cos((y-L_y/2+sqrt(3)*(x-L_x/2))/2) + cos((y-L_y/2-sqrt(3)*(x-L_x/2))/2))*exp(-sqrt(0.28)*sqrt((x-L_x/2)^2+(y-L_y/2)^2)/5))",
        crossDiffusion: true,
        diffusionStrUU: "0",
        diffusionStrUV: "-D",
        diffusionStrVU: "D",
        diffusionStrVV: "0",
        diffusionStrWW: "0",
        domainScale: 150,
        dt: 0.001,
        kineticParams:
          "r = -0.28  in  [-2,2];a = 1.6  in  [-2, 2];b = -1  in  [-2, 0.1, 2];c = -1;D = 1;P = 3.0 in  [1, 1, 3];Q = 1.0 in [1,1,2];V = 0.100 in [0,0.01,1];theta = -3.1500000 in  [-6.4,0.01,6.4];",
        maxColourValue: 1.2757612466812134,
        minColourValue: -0.3343241214752197,
        numTimestepsPerFrame: 200,
        preset: "swiftHohenbergLocalisedRotationalAdvection",
        reactionStrU: "(r-1)*u-2*v+a*u^2+b*u^3+V*((y-L_y/2)*u_x-(x-L_x/2)*u_y)",
        reactionStrV: "0",
        reactionStrW: "0",
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;

    case "GrayScottGlidersAdvecting":
      options = {
        boundaryConditionsU: "neumann",
        boundaryConditionsV: "neumann",
        brushRadius: "5",
        clearValueU: "0",
        clearValueV: "1",
        diffusionStrUU: "1",
        diffusionStrVV: "2",
        diffusionStrWW: "0",
        domainScale: 1000,
        kineticParams:
          "a=0.014 in [0,0.1];b=0.054  in  [0.04, 0.1];theta=-3.1500000 in [-6.4,0.01,6.4];V=0.02 in [0,0.04];",
        maxColourValue: 0.5,
        preset: "GrayScottGlidersAdvecting",
        reactionStrU: "u^2*v - (a+b)*u + V*(cos(theta)*u_x + sin(theta)*u_y)",
        reactionStrV: "-u^2*v + a*(1 - v)",
        reactionStrW: "0",
        spatialStep: 3,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;
    case "BeamEquation":
      options = {
        algebraicW: true,
        boundaryConditionsU: "dirichlet",
        boundaryConditionsV: "dirichlet",
        boundaryConditionsW: "dirichlet",
        brushValue: "-8",
        brushRadius: "0.5",
        clearValueU: "0",
        crossDiffusion: true,
        diffusionStrUU: "D_c*D",
        diffusionStrVV: "0",
        diffusionStrVW: "-D",
        diffusionStrWU: "D",
        diffusionStrWW: "0",
        dimension: "1",
        dt: 0.0001,
        kineticParams: "D  =  10;Q  =  0.000;C  =  0;D_c  =  0.1;",
        maxColourValue: 2.5,
        minColourValue: -8,
        numSpecies: "3",
        plotType: "line",
        preset: "BeamEquation",
        reactionStrU: "v",
        reactionStrV: "-Q-C*v",
        reactionStrW: "0",
        typeOfBrush: "vline",
        whatToDraw: "u",
        whatToPlot: "u",
        undefined: true,
      };
      break;
    case "CovidInARoom":
      options = {
        algebraicW: true,
        boundaryConditionsU: "neumann",
        brushAction: "smoothadd",
        brushRadius: "20",
        clearValueU: "0",
        colourbar: true,
        crossDiffusion: true,
        diffusionStrUU: "1",
        diffusionStrVV: "0",
        diffusionStrWW: "0",
        domainScale: 250,
        dt: 0.001,
        kineticParams:
          "V  =  20 in [0,40];R  =  10 in [0,20];lambda  =  1;beta  =  0;sigma  =  0;eta_sus  =  0.1 in [0,1];rho_sus  =  0.1 in [0,1];I  =  1;",
        minColourValue: -5.731946473019889e-9,
        neumannStrU: "-H((dx-x))*C_x + H((x+dx-L_x))*C_x",
        numSpecies: "3",
        numTimestepsPerFrame: 200,
        preset: "CovidInARoom",
        reactionStrU:
          "R*exp(-0.01*((x-L_x/2)^2+(y-L_y/2)^2))-(lambda+beta+sigma)*C-V*C_x",
        reactionStrV: "(1-eta_sus)*rho_sus*C",
        reactionStrW: "1 - exp(-I*d)",
        spatialStep: 1,
        speciesNames: "C d P",
        suppressTryClickingPopup: true,
        timeDisplay: true,
        whatToDraw: "C",
        whatToPlot: "P",
      };
      break;
    case "maze":
      options = {
        boundaryConditionsU: "dirichlet",
        boundaryConditionsV: "dirichlet",
        brushRadius: "5",
        clearValueU: "5*exp(-2*((x-L_x/10)^2+(y-19*L_y/20)^2))",
        clearValueV: "1",
        crossDiffusion: true,
        diffusionStrUU: "0.6",
        diffusionStrUV: "-c*u/(1+u^2)",
        diffusionStrVV: "0.002",
        diffusionStrWW: "0",
        dirichletStrV: "0.001",
        domainIndicatorFun: "I_S-0.51",
        domainViaIndicatorFun: true,
        dt: 0.005,
        forceTryClickingPopup: true,
        imagePathOne: "./images/maze.png",
        kineticParams: "c  =  5;a  =  0.02;b=0.0001;",
        maxColourValue: 1.1202512979507446,
        minColourValue: -0.0007872119313105941,
        preset: "maze",
        renderSize: 1024,
        reactionStrU: "u*(1-u)*(u+max(v,1)-1)",
        reactionStrV:
          "0.02*H(u-0.5)*exp(-0.1*((x-L_x/20)^2+(y-L_y/20)^2))-a*u-b*v",
        reactionStrW: "0",
        runningOnLoad: false,
        spatialStep: 0.2,
        tryClickingText: "Press play!",
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;
    case "QR":
      options = {
        boundaryConditionsU: "periodic",
        boundaryConditionsV: "periodic",
        colourmap: "greyscale",
        brushRadius: 2,
        diffusionStrUU: "0.042",
        diffusionStrVV: "2",
        domainScale: 100,
        dt: 0.001,
        imagePathOne: "./images/qr-code-home.png",
        maxColourValue: 0,
        minColourValue: -2.3,
        numTimestepsPerFrame: 100,
        preset: "QR",
        renderSize: 652,
        reactionStrU: "(1-4*I_S) - u + u^2*v",
        reactionStrV: "1 - u^2*v",
        showAllOptionsOverride: true,
        spatialStep: 0.2,
        squareCanvas: true,
        suppressTryClickingPopup: true,
        whatToDraw: "u",
        whatToPlot: "-u",
      };
      break;
    case "unstableHeatEquation":
      options = {
        boundaryConditionsU: "neumann",
        brushRadius: 20,
        clearValueU: "0",
        diffusionStrUU: "100",
        diffusionStrVV: "0",
        diffusionStrWW: "0",
        domainScale: 320,
        dt: 0.01,
        numSpecies: 1,
        numTimestepsPerFrame: 1,
        preset: "unstableHeatEquation",
        reactionStrU: "0",
        reactionStrV: "0",
        reactionStrW: "0",
        spatialStep: 1.5,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;
    case "bistableTravellingWave":
      options = {
        boundaryConditionsU: "neumann",
        clearValueU: "0",
        diffusionStrVV: "0",
        diffusionStrWW: "0",
        dt: 0.005,
        kineticParams: "a=0.5 in [0,0.01,1]",
        numSpecies: 1,
        preset: "bistableTravellingWave",
        reactionStrU: "u*(u-a)*(1-u)",
        reactionStrV: "0",
        reactionStrW: "0",
        typeOfBrush: "vline",
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;
    case "bistableSurvival":
      options = {
        boundaryConditionsU: "neumann",
        brushRadius: 1,
        clearValueU: "0",
        diffusionStrUU: "D",
        diffusionStrVV: "0",
        diffusionStrWW: "0",
        dt: 0.005,
        kineticParams: "a=0.4 in [0,1]; D=1 in [0,2]",
        numSpecies: 1,
        preset: "PRESETNAME",
        reactionStrU: "u*(u-a)*(1-u)",
        reactionStrV: "0",
        reactionStrW: "0",
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;

    case "brusselator":
      options = {
        clearValueU: "a",
        clearValueV: "b/a",
        diffusionStrUU: "1",
        diffusionStrVV: "D_v",
        diffusionStrWW: "0",
        dt: 0.001,
        kineticParams: "D_v = 8 in [7, 0.1, 9];a=2;b=3;",
        maxColourValue: 4,
        minColourValue: 1,
        preset: "brusselator",
        reactionStrU: "a+u^2*v-(b+1)*u",
        reactionStrV: "b*u-u^2*v",
        reactionStrW: "0",
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;

    case "crossDiffusionSchnakenberg":
      options = {
        brushRadius: 2,
        clearValueU: "a + b",
        clearValueV: "b / (a+b)^2",
        colourmap: "greyscale",
        crossDiffusion: true,
        diffusionStrUU: "1",
        diffusionStrUV: "3",
        diffusionStrVU: "0.2",
        diffusionStrVV: "1",
        diffusionStrWW: "0",
        domainScale: 50,
        dt: 0.001,
        kineticParams: "a  =  0.01;b=2.5 in [0,3];D=100;",
        maxColourValue: 3,
        minColourValue: -1,
        numTimestepsPerFrame: 200,
        preset: "crossDiffusionSchnakenberg",
        reactionStrU: "a - u +u^2*v",
        reactionStrV: "b - u^2*v",
        reactionStrW: "0",
        spatialStep: 0.2,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;

    case "FHNBeatingHeart":
      options = {
        boundaryConditionsU: "dirichlet",
        boundaryConditionsV: "dirichlet",
        brushValue: "RAND",
        brushRadius: 5.5,
        clearValueU: "0.001",
        diffusionStrUU: "1",
        diffusionStrVV: "10",
        diffusionStrWW: "0",
        dirichletStrU: "-1",
        domainIndicatorFun:
          "(((x-140)/80)^2 + ((y-140)/80)^2 - 1)^3 - ((x-140)/80)^2*((y-140)/80)^3 < 0",
        domainScale: 280,
        domainViaIndicatorFun: true,
        dt: 0.001,
        kineticParams: "e_v=0.5;a_v=.01;a_z=-0.1;",
        minColourValue: -1,
        preset: "FHNBeatingHeart",
        reactionStrU: "u-u^3-v",
        reactionStrV: "e_v*(u-a_v*v-a_z)",
        reactionStrW: "0",
        squareCanvas: true,
        suppressTryClickingPopup: true,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;

    case "CahnHilliard":
      options = {
        algebraicV: true,
        brushRadius: 5,
        clearValueU: "tanh(30*(RAND-0.5))",
        crossDiffusion: true,
        diffusionStrUU: "r*D*(3*u^2-1)",
        diffusionStrUV: "r*-D",
        diffusionStrVU: "r*D*a",
        diffusionStrVV: "0",
        diffusionStrWW: "0",
        domainScale: 100,
        dt: 0.0005,
        fixRandSeed: true,
        kineticParams: "r=0.01 in [0, 0.01, 1];a=1;D=1;",
        minColourValue: -1,
        preset: "CahnHilliard",
        reactionStrU: "r*u*(1-u^2)",
        reactionStrV: "0",
        reactionStrW: "0",
        spatialStep: 0.5,
        squareCanvas: true,
        suppressTryClickingPopup: true,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;

    case "cyclicCompetition":
      options = {
        boundaryConditionsU: "neumann",
        boundaryConditionsV: "neumann",
        boundaryConditionsW: "neumann",
        brushRadius: 0,
        clearValueU: "0.1*RAND+x/100",
        clearValueV: "0.1*(1+RAND)",
        clearValueW: "0.1*(1+RAND)",
        diffusionStrUU: "2",
        diffusionStrVV: "0.5",
        diffusionStrWW: "0.5",
        domainScale: 500,
        dt: 0.007,
        fixRandSeed: true,
        kineticParams: "a=0.8;b=1.9",
        numSpecies: "3",
        preset: "cyclicCompetition",
        reactionStrU: "u*(1-u-a*v-b*w)",
        reactionStrV: "v*(1-b*u-v-a*w)",
        reactionStrW: "w*(1-a*u-b*v-w)",
        spatialStep: 2,
        whatToDraw: "u",
        whatToPlot: "u",
        diffusionUStr: "0.000001",
        diffusionVStr: "0.00004",
        diffusionWStr: "0.000008",
        diffusionU: 0.000001,
        diffusionV: 0.00004,
        diffusionW: 0.000008,
      };
      break;
    case "chemicalBasisOfMorphogenesis":
      options = {
        brushRadius: 5,
        clearValueU: "3.5*(1-I_S)",
        clearValueV: "1",
        colourmap: "viridis",
        diffusionStrUU: "0.1",
        diffusionStrVV: "1",
        diffusionStrWW: "0",
        domainScale: 100,
        dt: 0.001,
        imagePathOne: "./images/chemicalBasisOfMorphogenesis.png",
        kineticParams: "a=0.01 in [0,0.1];b=0.8 in [0,0.01,1];",
        maxColourValue: 3.5,
        preset: "chemicalBasisOfMorphogenesis",
        resetOnImageLoad: true,
        renderSize: 652,
        reactionStrU: "a - u + u^2*v",
        reactionStrV: "b - u^2*v",
        reactionStrW: "0",
        runningOnLoad: false,
        showAllOptionsOverride: true,
        spatialStep: 0.15,
        squareCanvas: true,
        tryClickingText: "Press play!",
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;

    case "lambdaOmega":
      options = {
        brushValue: "2",
        brushRadius: 1,
        clearValueU: "sin(2*pi*x/L_x)*sin(2*pi*y/L_y)",
        diffusionStrUU: "0.2",
        diffusionStrVV: "1",
        diffusionStrWW: "0",
        domainScale: 100,
        dt: 0.001,
        fixRandSeed: true,
        kineticParams: "a=3;c=-1;n=0;m=0;",
        maxColourValue: 3.1,
        numTimestepsPerFrame: 50,
        preset: "lambdaOmega",
        reactionStrU: "a*u-(u+c*v)*(u^2+v^2)",
        reactionStrV: "a*v+(c*u-v)*(u^2+v^2)",
        reactionStrW: "0",
        spatialStep: 0.2,
        whatToDraw: "u",
        whatToPlot: "u^2+v^2",
        constantDiffusion: false,
      };
      break;

    case "complexGinzburgLandau":
      options = {
        autoSetColourRange: true,
        clearValueU: "sin(n*x*pi/100)*sin(m*y*pi/100)",
        clearValueV: "sin(n*x*pi/100)*sin(m*y*pi/100)",
        crossDiffusion: true,
        diffusionStrUU: "D_r",
        diffusionStrUV: "-D_i",
        diffusionStrVU: "D_i",
        diffusionStrVV: "D_r",
        diffusionStrWW: "0",
        dt: 0.001,
        kineticParams:
          "b_i=0 in [-5,5];D_r=0.1;D_i=1;a_r=1;a_i=1;b_r=-1;n=10;m=10;",
        maxColourValue: 1.6760534048080444,
        minColourValue: 0.00015078618889674544,
        reactionStrU: "a_r*u-a_i*v+(b_r*u-b_i*v)*(u^2+v^2)",
        reactionStrV: "a_r*v+a_i*u+(b_r*v+b_i*u)*(u^2+v^2)",
        reactionStrW: "0",
        whatToPlot: "u^2+v^2",
        preset: "complexGinzburgLandau",
      };
      break;

    case "GiererMeinhardt":
      options = {
        brushRadius: 2,
        clearValueV: "1",
        diffusionStrUU: "1",
        diffusionStrVV: "100",
        diffusionStrWW: "0",
        domainScale: 100,
        dt: 0.0005,
        kineticParams: "a=0.5;b=1;c=6.1;",
        maxColourValue: 24,
        minColourValue: 0.6,
        preset: "GiererMeinhardt",
        reactionStrU: "a+u^2/v-b*u",
        reactionStrV: "u^2-c*v",
        reactionStrW: "0",
        spatialStep: 0.5,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;
    case "GiererMeinhardtStripeICs":
      options = {
        boundaryConditionsU: "neumann",
        boundaryConditionsV: "neumann",
        brushValue: "1.01*u",
        brushRadius: 2,
        clearValueU: "3*(1+cos(n*pi*x/100))",
        clearValueV: "1",
        diffusionStrUU: "1",
        diffusionStrVV: "100",
        diffusionStrWW: "0",
        domainScale: 100,
        dt: 0.0005,
        kineticParams: "n=6 in [1, 20];a=0.5;b=1;c=6.1;",
        maxColourValue: 24,
        minColourValue: 0.6,
        numTimestepsPerFrame: 200,
        preset: "GiererMeinhardtStripeICs",
        reactionStrU: "a+u^2/v-b*u",
        reactionStrV: "u^2-c*v",
        reactionStrW: "0",
        spatialStep: 0.5,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;
    case "GiererMeinhardtStripes":
      options = {
        brushRadius: 2,
        clearValueV: "1",
        diffusionStrUU: "1",
        diffusionStrVV: "100",
        diffusionStrWW: "0",
        domainScale: 200,
        dt: 0.0005,
        kineticParams: "K=0.003 in [0, 0.001, 0.003];a=0.5;b=1;c=6.1;",
        maxColourValue: 9,
        minColourValue: 1.5,
        numTimestepsPerFrame: 200,
        preset: "GiererMeinhardtStripes",
        reactionStrU: "a+u^2/(v*(1+K*u^2))-b*u",
        reactionStrV: "u^2-c*v",
        reactionStrW: "0",
        spatialStep: 0.5,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;
    case "GMHeterogeneous2D":
      options = {
        autoSetColourRange: true,
        boundaryConditionsU: "dirichlet",
        brushRadius: 2,
        clearValueV: "1",
        diffusionStrUU: "1",
        diffusionStrVV: "55",
        diffusionStrWW: "0",
        domainScale: 100,
        dt: 0.0005,
        kineticParams: "A=0 in [-1,0.1,1];B=0 in [0, 0.1, 5];a=1;b=1.5;c=6.1;",
        maxColourValue: 12.804131507873535,
        numTimestepsPerFrame: 200,
        preset: "GMHeterogeneous2D",
        reactionStrU: "(a+A*x/100)+u^2/v-(b+B*x/100)*u",
        reactionStrV: "u^2-c*v",
        reactionStrW: "0",
        spatialStep: 0.5,
        squareCanvas: true,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;

    case "GMHeterogeneousOscillationsMixedBCs":
      options = {
        boundaryConditionsU: "dirichlet",
        boundaryConditionsV: "neumann",
        brushRadius: 1,
        cameraTheta: 0.5,
        cameraPhi: 0,
        cameraZoom: 0.76,
        clearValueU: "1",
        clearValueV: "1",
        diffusionStrUU: "1",
        diffusionStrVV: "55",
        diffusionStrWW: "0",
        dirichletStrV: "1.8",
        domainScale: 50,
        dt: 0.0005,
        kineticParams: "a=0.95;b=1.6;c=3;B=5;",
        maxColourValue: 5,
        numTimestepsPerFrame: 400,
        oneDimensional: true,
        preset: "GMHeterogeneousOscillationsMixedBCs",
        reactionStrU: "a+u^2/v-b*u-B*(x/55)*u",
        reactionStrV: "u^2-c*v",
        reactionStrW: "0",
        renderSize: 1024,
        spatialStep: 0.25,
        squareCanvas: true,
        threeD: true,
        timeDisplay: true,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;
    case "GMHeterogeneousOscillationsDirichletBCs":
      options = {
        boundaryConditionsU: "dirichlet",
        boundaryConditionsV: "dirichlet",
        brushRadius: 0,
        cameraTheta: 0.5,
        cameraPhi: 0,
        cameraZoom: 0.76,
        clearValueU: "1",
        clearValueV: "1",
        diffusionStrUU: "1",
        diffusionStrVV: "55",
        diffusionStrWW: "0",
        dirichletStrV: "2",
        domainScale: 70,
        dt: 0.0005,
        kineticParams: "a=0.95;b=1.6;c=3;B=4;",
        maxColourValue: 5,
        numTimestepsPerFrame: 400,
        oneDimensional: true,
        preset: "GMHeterogeneousOscillationsDirichletBCs",
        reactionStrU: "a+u^2/v-b*u-B*(x/55)*u",
        reactionStrV: "u^2-c*v",
        reactionStrW: "0",
        renderSize: 1024,
        spatialStep: 0.25,
        squareCanvas: true,
        threeD: true,
        timeDisplay: true,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;
    case "FitzHugh-Nagumo":
      options = {
        brushValue: "0",
        brushRadius: 14,
        clearValueU: "0*RAND",
        diffusionStrUU: "1",
        diffusionStrVV: "20",
        diffusionStrWW: "0",
        domainScale: 280,
        dt: 0.001,
        fixRandSeed: true,
        kineticParams: "e_v=0.5;a_v=1;a_z=-0.1;",
        minColourValue: -1,
        numSpecies: "2",
        preset: "FitzHugh-Nagumo",
        reactionStrU: "u-u^3-v",
        reactionStrV: "e_v*(u-a_v*v-a_z)",
        reactionStrW: "0",
        spatialStep: 1.4,
        squareCanvas: true,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;

    case "FitzHugh-Nagumo-Hopf":
      options = {
        brushValue: "0",
        brushRadius: 14,
        clearValueU: "cos(m*x*pi/280)*cos(m*y*pi/280)",
        diffusionStrUU: "1",
        diffusionStrVV: "26",
        diffusionStrWW: "0",
        domainScale: 280,
        dt: 0.001,
        fixRandSeed: true,
        kineticParams: "m=4 in [3,6];e_v=0.2;a_v=.01;a_z=-0.1;",
        minColourValue: -1,
        numSpecies: "2",
        preset: "FitzHugh-Nagumo-Hopf",
        reactionStrU: "u-u^3-v",
        reactionStrV: "e_v*(u-a_v*v-a_z)",
        reactionStrW: "0",
        spatialStep: 1.4,
        squareCanvas: true,
        suppressTryClickingPopup: true,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;

    case "FitzHugh-Nagumo-3":
      options = {
        brushValue: "0",
        brushRadius: 12.6,
        clearValueU: "5*(exp(-0.1*((x-L_x/2)^2+(y-L_y/2)^2)))",
        clearValueV: "5*(exp(-0.1*((x-L_x/2)^2+(y-L_y/2)^2)))",
        clearValueW: "5*(exp(-0.1*((x-L_x/2)^2+(y-L_y/2)^2)))",
        diffusionStrUU: "1",
        diffusionStrVV: "40",
        diffusionStrWW: "200",
        domainScale: 340,
        dt: 0.001,
        fixRandSeed: true,
        kineticParams:
          "a_v=.065 in [0, 0.2];m=4;e_v=0.2;e_w=1;a_w=0.5;a_z=-0.1;",
        minColourValue: -1,
        numSpecies: "3",
        preset: "FitzHugh-Nagumo-3",
        reactionStrU: "u-u^3-v",
        reactionStrV: "e_v*(u-a_v*v-a_w*w-a_z)",
        reactionStrW: "e_w*(u-w)",
        spatialStep: 1.8,
        squareCanvas: true,
        suppressTryClickingPopup: true,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;
    case "GrayScott":
      options = {
        clearValueU: "0",
        clearValueV: "1",
        diffusionStrUU: "1",
        diffusionStrVV: "2",
        diffusionStrWW: "0",
        domainScale: 1000,
        kineticParams: "a=0.037 in [0,0.1];b=0.06 in [0.04,0.1];",
        maxColourValue: 0.5,
        minColourValue: 0,
        reactionStrU: "u^2*v - (a+b)*u",
        reactionStrV: "-u^2*v + a*(1 - v)",
        reactionStrW: "0",
        spatialStep: 3,
        whatToDraw: "u",
        whatToPlot: "u",
        preset: "GrayScott",
      };
      break;
    case "GrayScottGliders":
      options = {
        clearValueU: "0",
        clearValueV: "1",
        diffusionStrUU: "1",
        diffusionStrVV: "2",
        diffusionStrWW: "0",
        domainScale: 1000,
        kineticParams: "a=0.014 in [0,0.1];b=0.054 in [0.04,0.1];",
        maxColourValue: 0.5,
        minColourValue: 0,
        preset: "GrayScottGliders",
        reactionStrU: "u^2*v - (a+b)*u",
        reactionStrV: "-u^2*v + a*(1 - v)",
        reactionStrW: "0",
        spatialStep: 3,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;
    case "ImmunotherapyModel":
      options = {
        brushValue: "2",
        brushRadius: 3,
        clearValueU: " s_u/(mu-p_u*s_w/(nu*(g_u+s_w/nu)))",
        clearValueW: "s_w/nu",
        diffusionStrUU: "0.5",
        diffusionStrVV: "0.008",
        diffusionStrWW: "4",
        dirichletStrU: "0",
        dirichletStrW: "15*(1+cos(t/40))",
        dt: 0.0005,
        fixRandSeed: true,
        kineticParams:
          "c=0.3;mu=0.167;p_u=0.69167;g_u=20;p_v=0.5555556;g_v=0.1;p_w=27.778;g_w=0.001;nu=55.55556;s_w=10;s_u=0.0;",
        maxColourValue: 0.8,
        minColourValue: 0.0,
        numSpecies: "3",
        numTimestepsPerFrame: 200,
        preset: "ImmunotherapyModel",
        reactionStrU: "c*v-mu*u+p_u*u*w/(g_u+w)+s_u",
        reactionStrV: "v*(1-v)-p_v*u*v/(g_v+v)",
        reactionStrW: "p_w*u*v/(g_w+v)-nu*w+s_w",
        spatialStep: 0.25,
        timeDisplay: true,
      };
      break;

    case "KellerSegel":
      options = {
        brushValue: "RAND",
        brushRadius: 5.6000000000000005,
        clearValueU: "0.01*RAND",
        crossDiffusion: true,
        diffusionStrUU: "1",
        diffusionStrUV: "-c*u/(1+u^2)",
        diffusionStrVV: "D",
        diffusionStrWW: "0",
        domainScale: 100,
        dt: 0.005,
        kineticParams: "c=4 in [3, 0.1, 4];D=1 in [0,1];a=0.1 in [0,0.2]",
        maxColourValue: 2.5,
        minColourValue: 0.0004821050970349461,
        preset: "KellerSegel",
        reactionStrU: "u*(1-u)",
        reactionStrV: "u-a*v",
        reactionStrW: "0",
        spatialStep: 0.2,
        suppressTryClickingPopup: true,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;

    case "KellerSegelHeart":
      options = {
        boundaryConditionsU: "dirichlet",
        boundaryConditionsV: "dirichlet",
        brushValue: "RAND",
        brushRadius: 5.5,
        clearValueU: "0.001",
        crossDiffusion: true,
        diffusionStrUU: "1",
        diffusionStrUV: "-c*u/(1+u^2)",
        diffusionStrVV: "1",
        diffusionStrWW: "0",
        domainIndicatorFun:
          "(((x-140)/80)^2 + ((y-140)/80)^2 - 1)^3 - ((x-140)/80)^2*((y-140)/80)^3 < 0",
        domainScale: 280,
        domainViaIndicatorFun: true,
        dt: 0.005,
        kineticParams: "c=4;a=0.1;",
        maxColourValue: 2.5,
        minColourValue: 0.0004821050970349461,
        preset: "KellerSegelHeart",
        reactionStrU: "u*(1-u)",
        reactionStrV: "u-a*v",
        reactionStrW: "0",
        spatialStep: 0.5,
        squareCanvas: true,
        suppressTryClickingPopup: true,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;

    case "KuramotoSivashinsky":
      options = {
        algebraicV: true,
        autoSetColourRange: true,
        brushValue: "-44",
        brushRadius: 2,
        clearValueU: "-45",
        crossDiffusion: true,
        diffusionStrUU: "-1-u",
        diffusionStrUV: "-1",
        diffusionStrVU: "1",
        diffusionStrVV: "0",
        diffusionStrWW: "0",
        domainScale: 150,
        dt: 0.001,
        kineticParams: "a=0.03;",
        maxColourValue: -15.152745246887207,
        minColourValue: -16.152745246887207,
        numSpecies: "2",
        preset: "KuramotoSivashinsky",
        reactionStrU: "u*v-a*u",
        reactionStrV: "0",
        reactionStrW: "0",
        spatialStep: 0.5,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;

    case "KuramotoSivashinsky3D":
      options = {
        algebraicV: true,
        autoSetColourRange: true,
        brushValue: "-44",
        brushRadius: 2,
        clearValueU: "-45",
        crossDiffusion: true,
        diffusionStrUU: "-1-u",
        diffusionStrUV: "-1",
        diffusionStrVU: "1",
        diffusionStrVV: "0",
        diffusionStrWW: "0",
        domainScale: 150,
        drawIn3D: true,
        dt: 0.001,
        kineticParams: "a=0.03;",
        maxColourValue: -25.7167911529541,
        minColourValue: -37.65152359008789,
        numSpecies: "2",
        preset: "KuramotoSivashinsky3D",
        reactionStrU: "u*v-a*u",
        reactionStrV: "0",
        reactionStrW: "0",
        spatialStep: 0.5,
        threeD: true,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;

    case "localisedPatterns":
      options = {
        brushValue: "9",
        brushRadius: 0.1,
        clearValueU: "1",
        clearValueV: "0.99",
        diffusionStrUU: "0.0010",
        diffusionStrVV: "0.5",
        diffusionStrWW: "0",
        domainScale: 10,
        dt: 0.000625,
        maxColourValue: 9,
        minColourValue: 2,
        numTimestepsPerFrame: 200,
        preset: "localisedPatterns",
        renderSize: 700,
        reactionStrU: "(1+tanh(1*((x-5)*(x-5)+(y-5)*(y-5)-20)))-u+u^2*v",
        reactionStrV: "0.99 - u^2*v",
        reactionStrW: "0",
        spatialStep: 0.05,
        squareCanvas: true,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;
    case "thresholdSimulation":
      options = {
        boundaryConditionsU: "neumann",
        brushRadius: 0.005,
        diffusionStrUU: "0.0001",
        diffusionStrVV: "0",
        diffusionStrWW: "0",
        dt: 0.002,
        numSpecies: 1,
        numTimestepsPerFrame: 200,
        preset: "thresholdSimulation",
        renderSize: 700,
        reactionStrU: "u*(1-u)*(u-0.4)",
        reactionStrV: "0",
        reactionStrW: "0",
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;

    case "harshEnvironment":
      options = {
        boundaryConditionsU: "neumann",
        brushRadius: 2,
        clearValueU: "0.1*exp(-10000*RAND)",
        colourbar: true,
        diffusionStrUU: "0.01",
        diffusionStrVV: "0",
        diffusionStrWW: "0",
        domainScale: 10,
        dt: 0.0001,
        fixRandSeed: true,
        kineticParams: "K=1;r=1;",
        numSpecies: 1,
        preset: "harshEnvironment",
        reactionStrU: "r*u*(1-u/K)",
        reactionStrV: "0",
        reactionStrW: "0",
        spatialStep: 0.05,
        squareCanvas: true,
        suppressTryClickingPopup: true,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;

    case "inhomogHeatEquation":
      options = {
        boundaryConditionsU: "neumann",
        brushRadius: 0,
        clearValueU: "0",
        diffusionStrUU: "1",
        diffusionStrVV: "0",
        diffusionStrWW: "0",
        domainScale: 100,
        dt: 0.004,
        kineticParams: "n=4 in [1,10];m=4 in [1,10];",
        minColourValue: -1,
        numSpecies: 1,
        preset: "inhomogHeatEquation",
        reactionStrU:
          "cos(n*pi*x/L_x)*cos(m*pi*y/L_y)*pi^2*((n/L_x)^2 + (m/L_y)^2)",
        reactionStrV: "0",
        reactionStrW: "0",
        spatialStep: 0.5,
        suppressTryClickingPopup: true,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;

    case "inhomogDiffusionHeatEquation":
      options = {
        boundaryConditionsU: "dirichlet",
        brushRadius: 5,
        clearValueU: "1",
        diffusionStrUU:
          "D*(1+E*cos(n*pi*sqrt((x-L_x/2)^2+(y-L_y/2)^2)/sqrt(L_x*L_y)))",
        diffusionStrVV: "0",
        diffusionStrWW: "0",
        domainScale: 100,
        dt: 0.004,
        kineticParams: "D=1;E=0.99 in [0,1];n=40 in [1,50];",
        numSpecies: 1,
        preset: "inhomogDiffusionHeatEquation",
        reactionStrU: "0",
        reactionStrV: "0",
        reactionStrW: "0",
        spatialStep: 0.5,
        suppressTryClickingPopup: true,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;

    case "inhomogWaveEquation":
      options = {
        boundaryConditionsU: "neumann",
        boundaryConditionsV: "neumann",
        brushRadius: 1,
        clearValueU: "0",
        clearValueV: "0",
        crossDiffusion: true,
        diffusionStrUU: "C*D",
        diffusionStrVU: "D*(1+E*sin(pi*m*x/L_x))*(1+E*sin(n*pi*y/L_y))",
        diffusionStrVV: "0",
        diffusionStrWW: "0",
        domainScale: 100,
        dt: 0.001,
        kineticParams: "D=1;m=9 in [0,10];n=9 in [0,10];C=0.01;E=0.97",
        preset: "inhomogWaveEquation",
        reactionStrU: "v",
        reactionStrV: "0",
        reactionStrW: "0",
        spatialStep: 0.3,
        whatToPlot: "u",
      };
      break;
    case "dampedWaveEquation":
      options = {
        boundaryConditionsU: "dirichlet",
        boundaryConditionsV: "dirichlet",
        brushRadius: 2,
        clearValueU: "0",
        crossDiffusion: true,
        diffusionStrUU: "C*D",
        diffusionStrVU: "D",
        diffusionStrVV: "0",
        diffusionStrWW: "0",
        dirichletStrU: "cos(m*x*pi/100)*cos(m*y*pi/100)",
        domainScale: 100,
        dt: 0.002,
        kineticParams: "D=1;C=0.01;m=8 in [0,10];d=0 in [0,0.01,0.1];",
        minColourValue: -1,
        preset: "PRESETNAME",
        reactionStrU: "v",
        reactionStrV: "-d*v",
        reactionStrW: "0",
        spatialStep: 0.5,
        squareCanvas: true,
        whatToPlot: "u",
      };
      break;

    case "travellingWave":
      options = {
        boundaryConditionsU: "neumann",
        clearValueU: "0.0",
        colourbar: true,
        diffusionStrUU: "1",
        diffusionStrVV: "0",
        diffusionStrWW: "0",
        dt: 0.0005,
        kineticParams: "K=1 in [0.5,1.5];r=1 in [0,0.1,5];",
        minColourValue: 0,
        maxColourValue: 1.5,
        numSpecies: 1,
        preset: "travellingWave",
        reactionStrU: "r*u*(1-u/K)",
        reactionStrV: "0",
        reactionStrW: "0",
        typeOfBrush: "vline",
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;
    case "travellingWave1D":
      options = {
        boundaryConditionsU: "neumann",
        cameraTheta: 0.5,
        cameraPhi: 0,
        clearValueU: "K*(1+tanh(90*(0.05-x/100)))/2",
        colourbar: true,
        diffusionStrUU: "1",
        diffusionStrVV: "0",
        diffusionStrWW: "0",
        dt: 0.0001,
        kineticParams: "K=1 in [0.5,1.5];r=1 in [0,0.1,5];",
        minColourValue: 0,
        maxColourValue: 1.5,
        numSpecies: 1,
        numTimestepsPerFrame: 400,
        oneDimensional: true,
        preset: "travellingWave1D",
        reactionStrU: "r*u*(1-u/K)",
        reactionStrV: "0",
        reactionStrW: "0",
        renderSize: 1024,
        suppressTryClickingPopup: true,
        threeD: true,
        typeOfBrush: "vline",
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;
    case "Sofya":
      options = {
        brushRadius: "2",
        diffusionStrUU: "0.042",
        diffusionStrVV: "0.5",
        diffusionStrWW: "0",
        dt: 0.001,
        maxColourValue: 2.3,
        numTimestepsPerFrame: 200,
        preset: "Sofya",
        renderSize: 652,
        reactionStrU: "(1-I_S) - u + u^2*v",
        reactionStrV: "1 - u^2*v",
        reactionStrW: "0",
        showAllOptionsOverride: true,
        spatialStep: 0.2,
        squareCanvas: true,
        suppressTryClickingPopup: true,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;
    case "Alan":
      options = {
        boundaryConditionsU: "periodic",
        boundaryConditionsV: "periodic",
        brushRadius: 2,
        diffusionStrUU: "0.042",
        diffusionStrVV: "2",
        domainScale: 100,
        dt: 0.001,
        maxColourValue: 2.3,
        numTimestepsPerFrame: 200,
        preset: "Alan",
        renderSize: 652,
        reactionStrU: "(1-I_T) - u + u^2*v",
        reactionStrV: "1 - u^2*v",
        showAllOptionsOverride: true,
        spatialStep: 0.2,
        squareCanvas: true,
        suppressTryClickingPopup: true,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;
    case "heatEquation":
      options = {
        boundaryConditionsU: "neumann",
        brushRadius: 20,
        clearValueU: "0",
        diffusionStrUU: "1",
        diffusionStrVV: "0",
        diffusionStrWW: "0",
        domainScale: 320,
        dt: 0.01,
        numSpecies: 1,
        preset: "heatEquation",
        reactionStrU: "0",
        reactionStrV: "0",
        reactionStrW: "0",
        spatialStep: 1.5,
        speciesNames: "T",
        whatToDraw: "T",
        whatToPlot: "T",
      };
      break;

    case "heatEquation1D":
      options = {
        boundaryConditionsU: "neumann",
        brushRadius: 20,
        cameraTheta: 0.5,
        cameraPhi: 0,
        cameraZoom: 1,
        clearValueU: "cos(m*pi*x/320)",
        diffusionStrUU: "1",
        diffusionStrVV: "0",
        diffusionStrWW: "0",
        domainScale: 320,
        dt: 0.01,
        kineticParams: "m=8 in [1,10];",
        minColourValue: -1,
        numSpecies: 1,
        oneDimensional: true,
        preset: "heatEquation1D",
        reactionStrU: "0",
        reactionStrV: "0",
        reactionStrW: "0",
        renderSize: 1024,
        spatialStep: 1.5,
        speciesNames: "T",
        threeD: true,
        whatToDraw: "T",
        whatToPlot: "T",
      };
      break;

    case "waveEquation":
      options = {
        brushRadius: 5,
        crossDiffusion: true,
        diffusionStrUU: "C*D",
        diffusionStrVU: "D",
        diffusionStrVV: "0",
        diffusionStrWW: "0",
        domainScale: 100,
        boundaryConditionsU: "neumann",
        boundaryConditionsV: "neumann",
        dt: 0.002,
        kineticParams: "D=1; C=0.01",
        preset: "waveEquation",
        reactionStrU: "v",
        reactionStrV: "0",
        reactionStrW: "0",
        spatialStep: 0.5,
      };
      break;

    case "waveEquationICs":
      options = {
        boundaryConditionsU: "neumann",
        boundaryConditionsV: "neumann",
        brushRadius: 5,
        clearValueU: "cos(n*pi*x/L_x)*cos(m*pi*y/L_y)",
        crossDiffusion: true,
        diffusionStrUU: "C*D",
        diffusionStrVU: "D",
        diffusionStrVV: "0",
        diffusionStrWW: "0",
        domainScale: 100,
        dt: 0.001,
        kineticParams: "D=1;C=0;n=4 in [1,10];m=4 in [1,10];",
        minColourValue: -1,
        preset: "waveEquationICs",
        reactionStrU: "v",
        reactionStrV: "0",
        reactionStrW: "0",
        spatialStep: 0.5,
        suppressTryClickingPopup: true,
        whatToPlot: "u",
      };
      break;
    case "waveEquation1D":
      options = {
        boundaryConditionsU: "neumann",
        boundaryConditionsV: "neumann",
        brushRadius: 5,
        cameraTheta: 0.5,
        cameraPhi: 0,
        clearValueU: "exp(-(35*pi)*(x/100-0.5)^2)",
        crossDiffusion: true,
        diffusionStrUU: "C*D",
        diffusionStrVU: "D",
        diffusionStrVV: "0",
        diffusionStrWW: "0",
        domainScale: 100,
        dt: 0.002,
        kineticParams: "D=1; C=0.01",
        oneDimensional: true,
        preset: "waveEquation1D",
        reactionStrU: "v",
        reactionStrV: "0",
        reactionStrW: "0",
        renderSize: 1024,
        spatialStep: 0.5,
        squareCanvas: true,
        suppressTryClickingPopup: true,
        threeD: true,
        whatToPlot: "u",
      };
      break;

    case "waveEquation3D":
      options = {
        boundaryConditionsU: "neumann",
        boundaryConditionsV: "neumann",
        brushRadius: 5,
        cameraTheta: 31.171766170073973,
        cameraPhi: 6.119583405771913,
        clearValueU: "exp(-(35*pi)*(x/100-0.5)^2)*exp(-(35*pi)*(y/100-0.5)^2)",
        crossDiffusion: true,
        diffusionStrUU: "C*D",
        diffusionStrVU: "D",
        diffusionStrVV: "0",
        diffusionStrWW: "0",
        domainScale: 100,
        dt: 0.002,
        kineticParams: "D=1; C=0.01",
        preset: "waveEquation3D",
        reactionStrU: "v",
        reactionStrV: "0",
        reactionStrW: "0",
        spatialStep: 0.5,
        squareCanvas: true,
        threeD: true,
        whatToPlot: "u",
      };
      break;

    case "Schnakenberg":
      options = {
        brushRadius: 2,
        clearValueU: "a + b",
        clearValueV: "b / (a+b)^2",
        diffusionStrUU: "1",
        diffusionStrVV: "D_v",
        diffusionStrWW: "0",
        domainScale: 100,
        dt: 0.0005,
        kineticParams: "D_v = 100 in [0, 100];a = 0.01;b = 2;",
        maxColourValue: 8,
        minColourValue: 0,
        numTimestepsPerFrame: 200,
        preset: "Schnakenberg",
        reactionStrU: "a - u +u^2*v",
        reactionStrV: "b - u^2*v",
        reactionStrW: "0",
        spatialStep: 0.5,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;

    case "SchnakenbergHopf":
      options = {
        brushRadius: 2,
        clearValueU: "a+b",
        clearValueV: "b/(a+b)^2",
        diffusionStrUU: "1",
        diffusionStrVV: "8",
        diffusionStrWW: "0",
        domainScale: 100,
        dt: 0.001,
        kineticParams: "a = 0.05 in [0, 0.005, 0.1]; b = 0.5 in [0, 0.1, 1];",
        maxColourValue: 3.5,
        numTimestepsPerFrame: 200,
        preset: "SchnakenbergHopf",
        reactionStrU: "a - u +u^2*v",
        reactionStrV: "b - u^2*v",
        reactionStrW: "0",
        spatialStep: 0.5,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;

    case "plateEquation":
      options = {
        suppressTryClickingPopup: true,
        algebraicW: true,
        brushValue: "-8",
        boundaryConditionsU: "dirichlet",
        boundaryConditionsV: "dirichlet",
        boundaryConditionsW: "dirichlet",
        clearValueU: "-4",
        crossDiffusion: true,
        diffusionStrUU: "D_c*D",
        diffusionStrVV: "0",
        diffusionStrVW: "-D",
        diffusionStrWU: "D",
        diffusionStrWW: "0",
        domainScale: 100,
        dt: 0.0001,
        kineticParams: "D=10;Q=0.003;C=0.1;D_c=0.1",
        maxColourValue: 0,
        minColourValue: -8,
        numSpecies: "3",
        preset: "plateEquation",
        reactionStrU: "v",
        reactionStrV: "-Q-C*v",
        reactionStrW: "0",
        spatialStep: 0.5,
        squareCanvas: true,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;

    case "plateEquation3D":
      options = {
        algebraicW: true,
        boundaryConditionsU: "dirichlet",
        boundaryConditionsV: "dirichlet",
        boundaryConditionsW: "dirichlet",
        brushRadius: 2,
        brushValue: "-8",
        cameraTheta: 131.97379772425356,
        cameraPhi: -156.79802955664945,
        clearValueU: "0",
        crossDiffusion: true,
        diffusionStrUU: "D_c*D",
        diffusionStrVV: "0",
        diffusionStrVW: "-D",
        diffusionStrWU: "D",
        diffusionStrWW: "0",
        domainScale: 100,
        drawIn3D: true,
        dt: 0.0001,
        kineticParams: "D=10;Q=0.000;C=0.1;D_c=0.1;",
        minColourValue: -3,
        numSpecies: "3",
        preset: "plateEquation3D",
        reactionStrU: "v",
        reactionStrV: "-Q-C*v",
        reactionStrW: "0",
        spatialStep: 0.5,
        squareCanvas: true,
        threeD: true,
        whatToDraw: "u",
        whatToPlot: "u",
        undefined: true,
      };
      break;

    case "stabilizedSchrodingerEquation":
      options = {
        boundaryConditionsU: "dirichlet",
        boundaryConditionsV: "dirichlet",
        brushRadius: 1,
        clearValueU: "sin(n*pi*x/100)*sin(m*pi*y/100)",
        crossDiffusion: true,
        diffusionStrUU: "C*D",
        diffusionStrUV: "-D",
        diffusionStrVU: "D",
        diffusionStrVV: "C*D",
        diffusionStrWW: "0",
        domainScale: 100,
        dt: 0.0001,
        kineticParams: "D=1; C=0.004;n=3 in [0,10];m=3 in [0,10]",
        preset: "stabilizedSchrodingerEquation",
        reactionStrU: "0",
        reactionStrV: "0",
        reactionStrW: "0",
        squareCanvas: true,
        spatialStep: 0.5,
        whatToDraw: "u",
        whatToPlot: "u^2+v^2",
      };
      break;

    case "stabilizedSchrodingerEquationPotential":
      options = {
        autoSetColourRange: true,
        boundaryConditionsU: "dirichlet",
        boundaryConditionsV: "dirichlet",
        brushRadius: 1,
        clearValueU: "(sin(pi*x/100)*sin(pi*y/100))^10",
        crossDiffusion: true,
        diffusionStrUU: "C*D",
        diffusionStrUV: "-D",
        diffusionStrVU: "D",
        diffusionStrVV: "C*D",
        diffusionStrWW: "0",
        domainScale: 100,
        dt: 0.0001,
        kineticParams: "D=1; C=0.004;n=15 in [0,50];m=15 in [0,50]",
        maxColourValue: 1.5228073596954346,
        preset: "stabilizedSchrodingerEquationPotential",
        reactionStrU: "-sin(n*pi*x/100)*sin(m*pi*y/100)*v",
        reactionStrV: "sin(n*pi*x/100)*sin(m*pi*y/100)*u",
        reactionStrW: "0",
        spatialStep: 0.5,
        squareCanvas: true,
        whatToDraw: "u",
        whatToPlot: "u^2+v^2",
      };
      break;
    case "stabilizedSchrodinger1D":
      options = {
        boundaryConditionsU: "dirichlet",
        boundaryConditionsV: "dirichlet",
        brushRadius: 1,
        cameraTheta: 0.5,
        cameraPhi: 0,
        clearValueU: "exp(-(0.5*pi/s^2)*(x/100-x0)^2)*cos(a*x)/N",
        clearValueV: "exp(-(0.5*pi/s^2)*(x/100-x0)^2)*sin(a*x)/N",
        crossDiffusion: true,
        diffusionStrUU: "C*D",
        diffusionStrUV: "-D",
        diffusionStrVU: "D",
        diffusionStrVV: "C*D",
        diffusionStrWW: "0",
        domainScale: 100,
        dt: 0.0001,
        integrate: true,
        kineticParams: "D=1;C=0.0007;a=4;s=0.08;x0=0.5;V=100;N=2.8279;d=0.000;",
        maxColourValue: 0.9,
        numTimestepsPerFrame: 400,
        oneDimensional: true,
        preset: "stabilizedSchrodinger1D",
        reactionStrU: "V*v*(x/100-0.5)^2",
        reactionStrV: "-V*u*(x/100-0.5)^2",
        reactionStrW: "0",
        renderSize: 1024,
        spatialStep: 0.35,
        squareCanvas: true,
        threeD: true,
        timeDisplay: true,
        whatToDraw: "u",
        whatToPlot: "u^2+v^2",
      };
      break;

    case "subcriticalGS":
      options = {
        preset: "subcriticalGS",
        reactionStrU: "-u*v^2 + 0.037*(1.0 - u)",
        reactionStrV: "u*v^2 - (0.037+0.06)*v",
        whatToDraw: "v",
        whatToPlot: "v",
      };
      break;

    case "swiftHohenberg":
      options = {
        algebraicV: true,
        autoSetColourRange: true,
        boundaryConditionsU: "periodic",
        boundaryConditionsV: "periodic",
        clearValueU: "0",
        crossDiffusion: true,
        diffusionStrUU: "0",
        diffusionStrUV: "-D",
        diffusionStrVU: "D",
        diffusionStrVV: "0",
        diffusionStrWW: "0",
        dt: 0.0005,
        kineticParams:
          "r=0.1 in [-2,0.1,2];a=1 in [-2,0.1,2];b=1 in [-2,0.1,2];c=-1;D=1;",
        maxColourValue: 1.44703209400177,
        minColourValue: -1.2287852764129639,
        numTimestepsPerFrame: 200,
        preset: "swiftHohenberg",
        renderSize: 512,
        reactionStrU: "(r-1)*u-2*v+a*u^2+b*u^3+c*u^5",
        reactionStrV: "0",
        reactionStrW: "0",
        squareCanvas: true,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;

    case "swiftHohenbergLocalised":
      options = {
        algebraicV: true,
        autoSetColourRange: true,
        boundaryConditionsU: "periodic",
        boundaryConditionsV: "periodic",
        brushRadius: 1,
        clearValueU:
          "H(1.5-P)*((cos(x-75) - cos((x-75+sqrt(3)*(y-75))/2) - cos((x-75-sqrt(3)*(y-75))/2)+cos(y-75) - cos((y-75+sqrt(3)*(x-75))/2) - cos((y-75-sqrt(3)*(x-75))/2))*exp(-sqrt(0.28)*sqrt((x-75)^2+(y-75)^2)/5)) +H(P-1.5)*H(2.5-P)*((cos(x-75) + cos((x-75+sqrt(3)*(y-75))/2) + cos((x-75-sqrt(3)*(y-75))/2))*exp(-sqrt(0.28)*sqrt((x-75)^2+(y-75)^2)/5))+H(P-2.5)*((cos(x-75) + cos((x-75+sqrt(3)*(y-75))/2) + cos((x-75-sqrt(3)*(y-75))/2)+cos(y-75) + cos((y-75+sqrt(3)*(x-75))/2) + cos((y-75-sqrt(3)*(x-75))/2))*exp(-sqrt(0.28)*sqrt((x-75)^2+(y-75)^2)/5))",
        crossDiffusion: true,
        diffusionStrUU: "0",
        diffusionStrUV: "-D",
        diffusionStrVU: "D",
        diffusionStrVV: "0",
        diffusionStrWW: "0",
        domainScale: 150,
        dt: 0.0005,
        kineticParams:
          "r=-0.28 in [-2,2];a=1.6 in [-2,2];b=-1 in [-2,0.1,2];c=-1;D=1;P=1 in [1,1,3];",
        maxColourValue: 1.325366735458374,
        minColourValue: -0.4033077657222748,
        numTimestepsPerFrame: 200,
        preset: "swiftHohenbergLocalised",
        reactionStrU: "(r-1)*u-2*v+a*u^2+b*u^3",
        reactionStrV: "0",
        reactionStrW: "0",
        squareCanvas: true,
        timeDisplay: true,
        whatToDraw: "u",
        whatToPlot: "u",
      };
      break;

    default:
      options = {
        algebraicV: false,
        algebraicW: false,
        algebraicQ: false,
        autoSetColourRange: false,
        backgroundColour: 0xffffff,
        boundaryConditionsU: "periodic",
        boundaryConditionsV: "periodic",
        boundaryConditionsW: "periodic",
        boundaryConditionsQ: "periodic",
        brushAction: "replace",
        brushValue: "1",
        brushRadius: 5,
        cameraTheta: 30,
        cameraPhi: 30,
        cameraZoom: 0.8,
        clearValueU: "1.0",
        clearValueV: "0",
        clearValueW: "0",
        clearValueQ: "0",
        colourbar: false,
        colourmap: "turbo",
        crossDiffusion: false,
        diffusionStrUU: "0.04",
        diffusionStrUV: "0",
        diffusionStrUW: "0",
        diffusionStrUQ: "0",
        diffusionStrVU: "0",
        diffusionStrVV: "0.02",
        diffusionStrVW: "0",
        diffusionStrVQ: "0",
        diffusionStrWU: "0",
        diffusionStrWV: "0",
        diffusionStrWW: "0.02",
        diffusionStrWQ: "0",
        diffusionStrQU: "0",
        diffusionStrQV: "0",
        diffusionStrQW: "0",
        diffusionStrQQ: "0",
        dimension: "2",
        dirichletStrU: "0",
        dirichletStrV: "0",
        dirichletStrW: "0",
        dirichletStrQ: "0",
        domainIndicatorFun: "1",
        domainScale: 100,
        domainViaIndicatorFun: false,
        drawIn3D: false,
        dt: 0.1,
        fixRandSeed: false,
        flippedColourmap: false,
        forceManualInterpolation: false,
        forceTryClickingPopup: false,
        imagePathOne: "./images/Sofya.png",
        imagePathTwo: "./images/Alan.png",
        integrate: false,
        kineticParams: "",
        lineWidthMul: 1,
        maxColourValue: 1.0,
        minColourValue: 0.0,
        neumannStrU: "0",
        neumannStrV: "0",
        neumannStrW: "0",
        neumannStrQ: "0",
        numSpecies: 2,
        numTimestepsPerFrame: 100,
        oneDimensional: false,
        onlyExposeOptions: [],
        plotType: "plane",
        preset: "default",
        resetOnImageLoad: false,
        renderSize: 512,
        reactionNames: "f g h j",
        reactionStrU: "-u*v^2 + 0.037*(1.0 - u)",
        reactionStrV: "u*v^2 - (0.037+0.06)*v",
        reactionStrW: "u*v^2 - (0.037+0.06)*v",
        reactionStrQ: "0",
        robinStrU: "0",
        robinStrV: "0",
        robinStrW: "0",
        robinStrQ: "0",
        runningOnLoad: true,
        showAllOptionsOverride: false,
        smoothingScale: 4,
        spatialStep: 1 / 2,
        speciesNames: "u v w q",
        squareCanvas: false,
        suppressTryClickingPopup: false,
        threeD: false,
        threeDHeightScale: 0.3,
        timeDisplay: false,
        tryClickingText: "Try clicking!",
        typeOfBrush: "circle",
        typesetCustomEqs: true,
        whatToDraw: "v",
        whatToPlot: "v",
      };
  }
  return options;
}

export function getUserTextFields() {
  return [
    "brushValue",
    "clearValueU",
    "clearValueV",
    "clearValueW",
    "clearValueQ",
    "diffusionStrUU",
    "diffusionStrUV",
    "diffusionStrUW",
    "diffusionStrUQ",
    "diffusionStrVU",
    "diffusionStrVV",
    "diffusionStrVW",
    "diffusionStrVQ",
    "diffusionStrWU",
    "diffusionStrWV",
    "diffusionStrWW",
    "diffusionStrWQ",
    "diffusionStrQU",
    "diffusionStrQV",
    "diffusionStrQW",
    "diffusionStrQQ",
    "dirichletStrU",
    "dirichletStrV",
    "dirichletStrW",
    "dirichletStrQ",
    "domainIndicatorFun",
    "neumannStrU",
    "neumannStrV",
    "neumannStrW",
    "neumannStrQ",
    "reactionStrU",
    "reactionStrV",
    "reactionStrW",
    "reactionStrQ",
    "robinStrU",
    "robinStrV",
    "robinStrW",
    "robinStrQ",
    "whatToDraw",
    "whatToPlot",
  ];
}
